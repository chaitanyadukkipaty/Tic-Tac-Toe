{"version":3,"sources":["components/Squares.js","components/Board.js","api/socket/index.js","api/https/index.js","components/Game.js","helper.js","components/Chat.jsx","Pages/GameRoom/GameRoom.js","Pages/Home/Home.jsx","serviceWorker.js","Pages/WaitingRoom/WaitingRoom.jsx","index.js","assets/images/avatar.png"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","onClick","value","borderRadius","width","height","margin","display","gridTemplateColumns","gridTemplateRows","Board","squares","map","square","i","key","socket","openSocket","baseUrl","placeBid","a","payload","axios","post","data","placeMove","Game","playerId","roomId","textInput","useRef","useState","Array","fill","board","setBoard","isMyTurn","setIsMyTrun","pts","setPts","winner","lines","length","b","c","calculateWinner","myChar","setChar","btn","setBtn","toggleBid","current","disableBid","enableTurn","changePts","changeBoard","handleClick","boardCopy","status","submitBid","bid","Number","toast","error","useEffect","addEventListener","e","keyCode","emit","joinRoom","on","bidWinner","move","dark","gameState","setMyCharacter","isArray","reload","game","oppoChar","makeMove","className","InputGroup","Prepend","Text","id","FormControl","ref","placeholder","aria-label","aria-describedby","Button","disabled","Chat","chat","msgs","setMsgs","sendChat","Msg","sendMsg","system","prev","recieveMsg","GameRoom","path","useLocation","pathname","split","pop","autoClose","transition","Zoom","limit","newestOnTop","Row","minHeight","Col","Home","room","console","log","window","location","href","Container","fluid","Navbar","expand","variant","Brand","md","span","offset","Card","Title","Body","createRoom","Boolean","hostname","match","WaitingRoom","players","setPlayers","joinbtn","setJoinbtn","startbtn","setStartbtn","username","getData","Avatar","Img","src","logo","player","xs","startGame","ReactDOM","render","StrictMode","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.c83491ad.chunk.js","sourcesContent":["import React from \"react\";\n\nconst style = {\n  background: \"lightblue\",\n  border: \"2px solid darkblue\",\n  fontSize: \"30px\",\n  fontWeight: \"800\",\n  cursor: \"pointer\",\n  outline: \"none\",\n};\n\nconst Square = ({ onClick, value }) => {\n  return (\n    <button style={style} onClick={onClick}>\n      {value}\n    </button>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"./Squares\";\n\nconst style = {\n  border: \"4px solid darkblue\",\n  borderRadius: \"10px\",\n  width: \"250px\",\n  height: \"250px\",\n  margin: \"0 auto\",\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\",\n  gridTemplateRows: \"repeat(3, 1fr)\",\n};\n\nconst Board = ({ squares, onClick }) => {\n  return (\n    <div style={style}>\n      {squares.map((square, i) => (\n        <Square key={i} value={square} onClick={() => onClick(i)} />\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","import openSocket from \"socket.io-client\";\nimport { baseUrl } from \"../../config.json\";\nimport { toast } from \"react-toastify\";\nconst socket = openSocket(baseUrl);\n\nexport function joinRoom({ roomId, playerId }) {\n  socket.emit(\"joinRoom\", { roomId, playerId });\n}\n\nexport function makeMove({ winner, playerId, board, myChar, changeBoard }) {\n  socket.on(\"Move\", (data) => {\n    const boardCopy = [...board];\n    const { game, bidWinner } = data;\n    if (winner || boardCopy[game]) return;\n    const oppoChar = \"X\" === myChar ? \"O\" : \"X\";\n    boardCopy[game] = bidWinner === playerId ? myChar : oppoChar;\n    changeBoard(boardCopy);\n  });\n}\n\nexport function gameState({\n  textInput,\n  playerId,\n  disableBid,\n  toggleBid,\n  enableTurn,\n  changePts,\n}) {\n  socket.on(\"gameState\", (data) => {\n    const { bid, bidWinner, move } = data;\n    if (bid.status === \"DRAW\") {\n      disableBid();\n      toast.dark(\"It's a Draw\");\n    } else if (bid.status === \"DONE\" && bidWinner === null && move === null) {\n      toast.dark(\"Bids are equal\");\n    } else if (\n      bid.status === \"DONE\" &&\n      bidWinner === playerId &&\n      move === playerId\n    ) {\n      textInput.current.value = \"\";\n      enableTurn();\n      toast.dark(\"Your Turn\");\n    } else if (\n      bid.status === \"DONE\" &&\n      bidWinner !== playerId &&\n      move !== playerId\n    ) {\n      textInput.current.value = \"\";\n      toast.dark(\"You Lost the Bid\");\n    }\n    if (bid[playerId] === 0 && bid.status === \"DONE\") {\n      toggleBid();\n    }\n    changePts(data[playerId]);\n  });\n}\n\nexport function setMyCharacter({ myChar, setChar }) {\n  socket.on(\"Char\", (data) => {\n    if (myChar === \"\") setChar(data);\n  });\n}\n\nexport function reload({\n  playerId,\n  enableTurn,\n  toggleBid,\n  changeBoard,\n  changePts,\n  textInput,\n}) {\n  socket.on(\"Reload\", (data) => {\n    const { bid, bidWinner, move } = data;\n    if (bid.status === \"DONE\" && bidWinner === playerId && move === playerId) {\n      enableTurn();\n      toast.dark(\"Your Turn\");\n    }\n    if (bid[playerId] !== 0) {\n      toggleBid();\n      textInput.current.value = bid[playerId];\n    }\n    if (Array.isArray(data[\"board\"]) && data[\"board\"].length)\n      changeBoard(data[\"board\"]);\n    changePts(data[playerId]);\n  });\n}\n\nexport function recieveMsg({ setMsgs }) {\n  socket.on(\"recieveMsg\", ({ system, Msg }) => {\n    setMsgs((prev) => {\n      return [...prev, { system, Msg }];\n    });\n  });\n}\n\nexport function sendMsg({ Msg, roomId }) {\n  socket.emit(\"sendMsg\", { Msg, roomId });\n}\n","import axios from \"axios\";\nimport { baseUrl } from \"../../config.json\";\n\nexport async function placeBid({ payload }) {\n  const { data } = await axios.post(`${baseUrl}/bid`, payload);\n  return { data };\n}\n\nexport async function placeMove({ payload }) {\n  const { data } = await axios.post(`${baseUrl}/symbolPlaced`, payload);\n  return { data };\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Game.css\";\nimport Board from \"../components/Board\";\nimport { calculateWinner } from \"../helper\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport {\n  joinRoom,\n  makeMove,\n  gameState,\n  setMyCharacter,\n  reload,\n} from \"../api/socket/index\";\nimport { placeBid, placeMove } from \"../api/https/index\";\nfunction Game({ playerId, roomId }) {\n  const textInput = useRef();\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isMyTurn, setIsMyTrun] = useState(false);\n  const [pts, setPts] = useState(100);\n  const winner = calculateWinner(board);\n  const [myChar, setChar] = useState(\"\");\n  const [btn, setBtn] = useState(false);\n\n  //helper functions\n  const toggleBid = () => {\n    setBtn((current) => !current);\n  };\n\n  const disableBid = () => {\n    setBtn((current) => true);\n  };\n\n  const disableTurn = () => {\n    setIsMyTrun((current) => false);\n  };\n\n  const enableTurn = () => {\n    setIsMyTrun((current) => true);\n  };\n\n  const changePts = (data) => {\n    setPts(data);\n  };\n\n  const changeBoard = (data) => {\n    setBoard(data);\n  };\n\n  const handleClick = async (i) => {\n    const boardCopy = [...board];\n    if (winner || boardCopy[i]) return;\n    if (isMyTurn) {\n      boardCopy[i] = myChar;\n      const payload = {\n        roomId: roomId,\n        playerId: playerId,\n        value: i,\n        board: boardCopy,\n      };\n      const { data } = await placeMove({ payload });\n      if (data.status) {\n        disableTurn();\n      }\n    }\n  };\n\n  const submitBid = async () => {\n    const bid = textInput.current.value;\n    const payload = {\n      roomId: roomId,\n      playerId: playerId,\n      value: Number(bid),\n      board: board,\n    };\n    if (pts >= Number(bid)) {\n      const { data } = await placeBid({ payload });\n      if (data.status) {\n        toggleBid();\n      }\n    } else {\n      toast.error(\"You don't have enought Points\");\n    }\n  };\n\n  useEffect(() => {\n    textInput.current.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 13) {\n        submitBid();\n      }\n    });\n    joinRoom({ roomId, playerId });\n    gameState({\n      textInput,\n      playerId,\n      disableBid,\n      toggleBid,\n      enableTurn,\n      changePts,\n    });\n    setMyCharacter({ myChar, setChar });\n\n    reload({\n      playerId,\n      enableTurn,\n      toggleBid,\n      changeBoard,\n      changePts,\n      textInput,\n    });\n  }, []);\n\n  useEffect(() => {\n    makeMove({ winner, playerId, board, myChar, changeBoard });\n  }, [myChar, board]);\n\n  return (\n    <>\n      <Board squares={board} onClick={handleClick} />\n      <div className=\"font d-flex  justify-content-center p-4\">\n        {\"Points left: \" + pts}\n      </div>\n      <div className=\"d-flex  justify-content-center p-4\">\n        <InputGroup className=\"mb-3 input\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">$</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            ref={textInput}\n            placeholder=\"Bid\"\n            aria-label=\"Bid\"\n            aria-describedby=\"basic-addon1\"\n          />\n        </InputGroup>\n      </div>\n      <div className=\"d-flex  justify-content-center p-4\">\n        <Button className=\"button \" onClick={submitBid} disabled={btn}>\n          Bid\n        </Button>\n      </div>\n\n      <div className=\"font\">{btn && \"Waiting for Other Player to Bid\"}</div>\n      <div className=\"font\">{winner && \"Winner: \" + winner}</div>\n    </>\n  );\n}\n\nexport default Game;\n","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.css\";\nimport { recieveMsg, sendMsg } from \"../api/socket/index\";\n\nfunction Chat({ playerId, roomId }) {\n  const chat = useRef();\n  const [msgs, setMsgs] = useState([]);\n\n  const sendChat = () => {\n    const Msg = `${playerId}: ${chat.current.value}`;\n    sendMsg({ Msg, roomId });\n    chat.current.value = \"\";\n  };\n\n  useEffect(() => {\n    chat.current.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 13) {\n        sendChat();\n      }\n    });\n    recieveMsg({ setMsgs });\n  }, []);\n  return (\n    <ul className=\"pages\">\n      <li className=\"chat page\">\n        <div className=\"chatArea\">\n          <ul className=\"messages\">\n            {msgs.map(({ system, Msg }, i) =>\n              system ? (\n                <li className=\"system-msg\" key={i}>\n                  {Msg}\n                </li>\n              ) : (\n                <li key={i}>{Msg}</li>\n              )\n            )}\n          </ul>\n        </div>\n        <input ref={chat} className=\"inputMessage\" placeholder=\"Type here...\" />\n      </li>\n    </ul>\n  );\n}\n\nexport default Chat;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./GameRoom.css\";\nimport Game from \"../../components/Game\";\nimport Chat from \"../../components/Chat\";\nimport { ToastContainer, Zoom } from \"react-toastify\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nfunction GameRoom() {\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const playerId = path.pop();\n  const roomId = path.pop();\n\n  return (\n    <>\n      <div className=\"root\">\n        <ToastContainer\n          autoClose={5000}\n          transition={Zoom}\n          limit={3}\n          newestOnTop\n        />\n        <Row style={{ minHeight: \"100vh\" }} className=\"fill-width \">\n          <Col className=\"d-flex flex-column justify-content-center align-items-center \">\n            <Game playerId={playerId} roomId={roomId} />\n          </Col>\n\n          <Col className=\"fill-width chat-room chat-visible\">\n            <Chat playerId={playerId} roomId={roomId} />\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default GameRoom;\n","import React from \"react\";\nimport \"./Home.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config.json\";\nimport { Card, Navbar, Button, Container, Col } from \"react-bootstrap\";\n\nfunction Home() {\n  async function createRoom() {\n    const { data } = await axios.post(baseUrl);\n    const path = `/waitingroom/${data.room}`;\n    console.log(path);\n    window.location.href = path;\n  }\n  return (\n    <>\n      <div className=\"home-container\">\n        <Container fluid>\n          <Navbar className=\"nav-color\" expand=\"lg\" variant=\"dark\">\n            <Navbar.Brand>Big-Bad-Joe</Navbar.Brand>\n          </Navbar>\n          <Col\n            md={{ span: 6, offset: 3 }}\n            className=\"d-flex flex-column justify-content-around fill \"\n          >\n            <div className=\"p-2\">\n              <Card className=\"card\">\n                <Card.Title className=\"card-title\">Rules</Card.Title>\n                <Card.Body className=\"text-justify\">\n                  <ul>\n                    <li>\n                      Unlike Regular Tic Tac Toe 'X' doesnt always start first.\n                    </li>\n                    <li>\n                      Each player begins with 100 points. Players can use these\n                      points to place bids\n                    </li>\n                    <li>\n                      Turns are decided by the bids placed by the players. The\n                      Player with bigger bid wins round and can freely place\n                      his/her move\n                    </li>\n                    <li>\n                      If both players reach 0 points before winning then the\n                      game is considered a draw\n                    </li>\n                    <li>\n                      If both players bid the same points then its considered\n                      draw and they have to bid again\n                    </li>\n                  </ul>\n                </Card.Body>\n              </Card>\n            </div>\n            <div className=\" d-flex  justify-content-center p-2 \">\n              <Button className=\"button\" onClick={() => createRoom()}>\n                {\"Start\"}\n              </Button>\n            </div>\n          </Col>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./WaitingRoom.css\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { baseUrl } from \"../../config.json\";\nimport {\n  Card,\n  Button,\n  InputGroup,\n  FormControl,\n  Col,\n  Row,\n} from \"react-bootstrap\";\nimport logo from \"../../assets/images/avatar.png\";\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(baseUrl);\n\nfunction WaitingRoom() {\n  const textInput = useRef();\n  const [players, setPlayers] = useState([]);\n  const { pathname } = useLocation();\n  const roomId = pathname.split(\"/\").pop();\n  const [joinbtn, setJoinbtn] = useState(false);\n  const [startbtn, setStartbtn] = useState(true);\n\n  async function joinRoom() {\n    const username = textInput.current.value;\n    const payload = { roomId: roomId, playerId: username };\n    socket.emit(\"joinRoom\", payload);\n  }\n\n  async function startGame() {\n    const username = textInput.current.value;\n    const path = `/room/${roomId}/${username}`;\n    console.log(path);\n    window.location.href = path;\n  }\n\n  useEffect(() => {\n    textInput.current.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 13) {\n        joinRoom();\n      }\n    });\n    async function getData() {\n      const payload = { roomId: roomId };\n      const { data } = await axios.post(`${baseUrl}/getPlayers`, payload);\n      setPlayers((prev) => data);\n      if (data.length === 2) {\n        setStartbtn((current) => !current);\n        setJoinbtn((current) => !current);\n      }\n    }\n    socket.on(\"joined\", (data) => {\n      setPlayers(data);\n      if (data.length === 2) {\n        setStartbtn((current) => !current);\n        setJoinbtn((current) => !current);\n      }\n    });\n    getData();\n  }, []);\n\n  const Avatar = ({ username }) => (\n    <Card className=\"player-card\">\n      <Card.Img variant=\"top\" src={logo} />\n      <Card.Body>\n        <Card.Title>{username}</Card.Title>\n      </Card.Body>\n    </Card>\n  );\n  return (\n    <>\n      <div className=\"root\">\n        <Row className=\"fill-width\">\n          <Col\n            md={6}\n            className=\"d-flex flex-column justify-content-between fill-height\"\n          >\n            {players.length === 0 && (\n              <div className=\"font text-center\">\n                Waiting for players to join:{\" \"}\n              </div>\n            )}\n            {players.length > 0 && (\n              <div className=\"font text-center\">Players in the Game : </div>\n            )}\n            <Row className=\" d-flex  justify-content-center p-4 \">\n              {players.map((player, i) => (\n                <Col md={5} xs={6} className=\"p-2\">\n                  <Avatar key={i} username={player.playerId} />\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          <Col className=\"p-4 d-flex flex-column justify-content-center\" md={6}>\n            <div className=\"d-flex  justify-content-center p-4\">\n              <InputGroup className=\" input\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  ref={textInput}\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n              </InputGroup>\n            </div>\n            <Row>\n              {!joinbtn ? (\n                <Col className=\" d-flex  justify-content-center p-4 \">\n                  <Button\n                    className=\"button\"\n                    onClick={() => joinRoom()}\n                    disabled={joinbtn}\n                  >\n                    {\"Join\"}\n                  </Button>\n                </Col>\n              ) : (\n                <Col className=\" d-flex  justify-content-center p-4 \">\n                  <Button\n                    className=\"button\"\n                    onClick={() => startGame()}\n                    disabled={startbtn}\n                  >\n                    {\"Start\"}\n                  </Button>\n                </Col>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default WaitingRoom;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport GameRoom from \"../src/Pages/GameRoom/GameRoom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"../src/Pages/Home/Home\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport WaitingRoom from \"../src/Pages/WaitingRoom/WaitingRoom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/room\">\n          <GameRoom />\n        </Route>\n        <Route path=\"/waitingroom\">\n          <WaitingRoom />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.3f28b642.png\";"],"sourceRoot":""}