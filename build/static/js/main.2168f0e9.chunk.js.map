{"version":3,"sources":["components/Squares.js","components/Board.js","api/socket/index.js","api/https/index.js","components/Game.js","helper.js","components/Chat.jsx","Pages/GameRoom/GameRoom.js","Pages/Home/Home.jsx","serviceWorker.js","Pages/WaitingRoom/WaitingRoom.jsx","index.js","assets/images/avatar.png"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","onClick","value","borderRadius","width","height","margin","display","gridTemplateColumns","gridTemplateRows","Board","squares","map","square","i","key","socket","openSocket","baseUrl","placeBid","a","payload","axios","post","data","placeMove","getPlayers","players","Game","playerId","roomId","textInput","useRef","useState","Array","fill","board","setBoard","isMyTurn","setIsMyTrun","pts","setPts","winner","lines","length","b","c","calculateWinner","myChar","setChar","btn","setBtn","setPlayers","toggleBid","current","disableBid","enableBid","enableTurn","changePts","changeBoard","handleClick","boardCopy","status","submitBid","bid","Number","toast","error","useEffect","addEventListener","e","keyCode","emit","joinRoom","on","bidWinner","move","console","log","dark","gameState","setMyCharacter","isArray","reload","prev","addPlayers","game","makeMove","className","InputGroup","Prepend","Text","id","FormControl","ref","type","placeholder","aria-label","aria-describedby","Button","disabled","Character","Chat","chat","msgs","setMsgs","sendChat","Msg","sendMsg","isMobile","system","recieveMsg","GameRoom","path","useLocation","pathname","split","pop","autoClose","transition","Zoom","limit","hideProgressBar","newestOnTop","Row","minHeight","Col","Home","room","window","location","href","Container","fluid","Navbar","expand","variant","Brand","md","span","offset","Card","Title","Body","createRoom","Boolean","hostname","match","WaitingRoom","joinbtn","setJoinbtn","startbtn","setStartbtn","username","getData","Avatar","Img","src","logo","player","xs","startGame","ReactDOM","render","StrictMode","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.2168f0e9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst style = {\n  background: \"lightblue\",\n  border: \"2px solid darkblue\",\n  fontSize: \"30px\",\n  fontWeight: \"800\",\n  cursor: \"pointer\",\n  outline: \"none\",\n};\n\nconst Square = ({ onClick, value }) => {\n  return (\n    <button style={style} onClick={onClick}>\n      {value}\n    </button>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"./Squares\";\n\nconst style = {\n  border: \"4px solid darkblue\",\n  borderRadius: \"10px\",\n  width: \"250px\",\n  height: \"250px\",\n  margin: \"0 auto\",\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\",\n  gridTemplateRows: \"repeat(3, 1fr)\",\n};\n\nconst Board = ({ squares, onClick }) => {\n  return (\n    <div style={style}>\n      {squares.map((square, i) => (\n        <Square key={i} value={square} onClick={() => onClick(i)} />\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","import openSocket from \"socket.io-client\";\nimport { baseUrl } from \"../../config.json\";\nimport { toast } from \"react-toastify\";\nconst socket = openSocket(baseUrl);\n\nexport function joinRoom({ roomId, playerId }) {\n  socket.emit(\"joinRoom\", { roomId, playerId });\n}\n\nexport function disconnected(){\n  socket.on(\"disconnect\",()=>{\n    toast.error(\"You have been disconnected, Reload the page\");\n  })\n}\n\nexport function makeMove({ winner, playerId, board, myChar, changeBoard }) {\n  socket.on(\"Move\", (data) => {\n    const boardCopy = [...board];\n    const { game, bidWinner } = data;\n    if (winner || boardCopy[game]) return;\n    changeBoard([...data.board]);\n  });\n}\n\nexport function gameState({\n  textInput,\n  playerId,\n  disableBid,\n  toggleBid,\n  enableTurn,\n  enableBid,\n  changePts,\n}) {\n  socket.on(\"gameState\", (data) => {\n    const { bid, bidWinner, move } = data;\n    console.log(data)\n    if (bid.status === \"DRAW\") {\n      disableBid();\n      toast.dark(\"It's a Draw\");\n    } else if (bid.status === \"DONE\" && bidWinner === null && move === null) {\n      toast.dark(\"Bids are equal\");\n    } else if (\n      bid.status === \"DONE\" &&\n      bidWinner === playerId &&\n      move === playerId\n    ) {\n      textInput.current.value = \"\";\n      enableTurn();\n      toast.dark(\"You won the bid, make your move\");\n    } else if (\n      bid.status === \"DONE\" &&\n      bidWinner !== playerId &&\n      move !== playerId\n    ) {\n      textInput.current.value = \"\";\n      toast.dark(\"You Lost the Bid\");\n    }\n    if (bid[playerId] === 0 && bid.status === \"DONE\") {\n      toggleBid();\n    }\n    changePts(data[playerId]);\n  });\n}\n\nexport function setMyCharacter({ myChar, setChar }) {\n  socket.on(\"Char\", (data) => {\n    if (myChar === \"\") setChar(data);\n  });\n}\n\nexport function reload({\n  playerId,\n  enableTurn,\n  toggleBid,\n  changeBoard,\n  changePts,\n  textInput,\n}) {\n  socket.on(\"Reload\", (data) => {\n    const { bid, bidWinner, move } = data;\n    if (bid.status === \"DONE\" && bidWinner === playerId && move === playerId) {\n      enableTurn();\n      toast.dark(\"You won the bid, make your move\");\n    }\n    if (bid[playerId] !== 0) {\n      toggleBid();\n      textInput.current.value = bid[playerId];\n    }\n    if (Array.isArray(data[\"board\"]) && data[\"board\"].length)\n      changeBoard(data[\"board\"]);\n    changePts(data[playerId]);\n  });\n}\n\nexport function recieveMsg({ setMsgs,isMobile }) {\n  socket.on(\"recieveMsg\", ({ system, Msg }) => {\n    setMsgs((prev) => {\n      return [...prev, { system, Msg }];\n    });\n    if(isMobile && system)\n      toast.dark(Msg);\n  });\n}\n\nexport function sendMsg({ Msg, roomId }) {\n  socket.emit(\"sendMsg\", { Msg, roomId });\n}\n","import axios from \"axios\";\nimport { baseUrl } from \"../../config.json\";\n\nexport async function placeBid({ payload }) {\n  const { data } = await axios.post(`${baseUrl}/bid`, payload);\n  return { data };\n}\n\nexport async function placeMove({ payload }) {\n  const { data } = await axios.post(`${baseUrl}/symbolPlaced`, payload);\n  return { data };\n}\n\nexport async function getPlayers({ payload }) {\n  const { data } = await axios.post(`${baseUrl}/getPlayers`, payload);\n  const {players} = data;\n  return { players };\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Game.css\";\nimport Board from \"../components/Board\";\nimport { calculateWinner } from \"../helper\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport {\n  joinRoom,\n  makeMove,\n  gameState,\n  setMyCharacter,\n  reload,\n  disconnected,\n} from \"../api/socket/index\";\nimport { placeBid, placeMove, getPlayers } from \"../api/https/index\";\nfunction Game({ playerId, roomId }) {\n  const textInput = useRef();\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isMyTurn, setIsMyTrun] = useState(false);\n  const [pts, setPts] = useState(100);\n  const winner = calculateWinner(board);\n  const [myChar, setChar] = useState(\"\");\n  const [btn, setBtn] = useState(false);\n  const [players,setPlayers] = useState([]);\n\n  //helper functions\n  const toggleBid = () => {\n    setBtn((current) => !current);\n  };\n\n  const disableBid = () => {\n    setBtn((current) => true);\n  };\n\n  const enableBid = () => {\n    setBtn((current) => false);\n  };\n\n  const disableTurn = () => {\n    setIsMyTrun((current) => false);\n  };\n\n  const enableTurn = () => {\n    setIsMyTrun((current) => true);\n  };\n\n  const changePts = (data) => {\n    setPts(data);\n  };\n\n  const changeBoard = (data) => {\n    setBoard(data);\n  };\n\n  const handleClick = async (i) => {\n    const boardCopy = [...board];\n    if (winner || boardCopy[i]) return;\n    if (isMyTurn) {\n      boardCopy[i] = myChar;\n      const payload = {\n        roomId: roomId,\n        playerId: playerId,\n        value: i,\n        board: boardCopy,\n      };\n      const { data } = await placeMove({ payload });\n      if (data.status) {\n        disableTurn();\n      }\n    }\n  };\n\n  const submitBid = async () => {\n    const bid = textInput.current.value;\n    const payload = {\n      roomId: roomId,\n      playerId: playerId,\n      value: Number(bid),\n      board: board,\n    };\n    if (pts >= Number(bid)) {\n      const { data } = await placeBid({ payload });\n      if (data.status) {\n        toggleBid();\n      }\n    } else {\n      toast.error(\"You don't have enought Points\");\n    }\n  };\n\n  useEffect(() => {\n    textInput.current.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 13) {\n        submitBid();\n      }\n    });\n    joinRoom({ roomId, playerId });\n    gameState({\n      textInput,\n      playerId,\n      disableBid,\n      toggleBid,\n      enableBid,\n      enableTurn,\n      changePts,\n    });\n    setMyCharacter({ myChar, setChar });\n    reload({\n      playerId,\n      enableTurn,\n      toggleBid,\n      changeBoard,\n      changePts,\n      textInput,\n    });\n    disconnected();\n    const addPlayers = async () =>{\n      const payload = {roomId: roomId};\n      const data = await getPlayers({payload});\n      setPlayers((prev)=>[...data.players]);\n    }\n    addPlayers();\n  }, []);\n\n  useEffect(() => {\n    makeMove({ winner, playerId, board, myChar, changeBoard });\n  }, [myChar, board]);\n\n  return (\n    <>\n    {isMyTurn && <div className=\"font d-flex  justify-content-center p-4\">\n        {\"Place your Move\"}\n      </div>}\n      <Board squares={board} onClick={handleClick} />\n      <div className=\"font d-flex  justify-content-center p-4\">\n        {\"Points left: \" + pts}\n      </div>\n      <div className=\"d-flex  justify-content-center p-4\">\n        <InputGroup className=\"mb-3 input\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">$</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            ref={textInput}\n            type=\"number\"\n            placeholder=\"Bid\"\n            aria-label=\"Bid\"\n            aria-describedby=\"basic-addon1\"\n          />\n        </InputGroup>\n      </div>\n      <div className=\"d-flex  justify-content-center p-4\">\n        <Button className=\"button \" onClick={submitBid} disabled={btn || isMyTurn}>\n          Bid\n        </Button>\n      </div>\n\n      <div className=\"font\">{btn && \"Waiting for Other Player to Bid\"}</div>\n      <div className=\"font\">{winner && \"Winner: \" + (winner===players[0].Character?players[0].playerId:players[1].playerId)}</div>\n    </>\n  );\n}\n\nexport default Game;\n","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.css\";\nimport { recieveMsg, sendMsg } from \"../api/socket/index\";\nimport {isMobile} from \"react-device-detect\";\nfunction Chat({ playerId, roomId }) {\n  const chat = useRef();\n  const [msgs, setMsgs] = useState([]);\n\n  const sendChat = () => {\n    const Msg = `${playerId}: ${chat.current.value}`;\n    sendMsg({ Msg, roomId });\n    chat.current.value = \"\";\n  };\n\n  useEffect(() => {\n    chat.current.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 13) {\n        sendChat();\n      }\n    });\n    recieveMsg({ setMsgs, isMobile });\n  }, []);\n  return (\n    <div className=\"chat-room\">\n      <ul className=\"pages\">\n        <li className=\"chat page\">\n          <div className=\"chatArea\">\n            <ul className=\"messages\">\n              {msgs.map(({ system, Msg }, i) =>\n                system ? (\n                  <li className=\"system-msg\" key={i}>\n                    {Msg}\n                  </li>\n                ) : (\n                  <li key={i}>{Msg}</li>\n                )\n              )}\n            </ul>\n          </div>\n          <input ref={chat} className=\"inputMessage\" placeholder=\"Type here...\" />\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Chat;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./GameRoom.css\";\nimport Game from \"../../components/Game\";\nimport Chat from \"../../components/Chat\";\nimport { ToastContainer, Zoom } from \"react-toastify\";\nimport { Col, Row, Navbar, Nav } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport {MobileOnlyView} from \"react-device-detect\";\nfunction GameRoom() {\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const playerId = path.pop();\n  const roomId = path.pop();\n\n  return (\n    <>\n      <div className=\"root\">\n        <ToastContainer\n          autoClose={5000}\n          transition={Zoom}\n          limit={3}\n          hideProgressBar\n          newestOnTop\n        />\n        {/* <MobileOnlyView>\n          <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">BigBadJoe</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Chat/>\n            </Navbar.Collapse>\n          </Navbar>\n        </MobileOnlyView> */}\n        <Row style={{ minHeight: \"100vh\" }} className=\"fill-width \">\n          <Col className=\"d-flex flex-column justify-content-center align-items-center \">\n            <Game playerId={playerId} roomId={roomId} />\n          </Col>\n\n          <Col className=\"fill-width chat-room chat-visible\">\n            <Chat playerId={playerId} roomId={roomId} />\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default GameRoom;\n","import React from \"react\";\nimport \"./Home.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config.json\";\nimport { Card, Navbar, Button, Container, Col } from \"react-bootstrap\";\n\nfunction Home() {\n  async function createRoom() {\n    const { data } = await axios.post(baseUrl);\n    const path = `/waitingroom/${data.room}`;\n    console.log(path);\n    window.location.href = path;\n  }\n  return (\n    <>\n      <div className=\"home-container\">\n        <Container fluid>\n          <Navbar className=\"nav-color\" expand=\"lg\" variant=\"dark\">\n            <Navbar.Brand>Big-Bad-Joe</Navbar.Brand>\n          </Navbar>\n          <Col\n            md={{ span: 6, offset: 3 }}\n            className=\"d-flex flex-column justify-content-around fill \"\n          >\n            <div className=\"p-2\">\n              <Card className=\"card\">\n                <Card.Title className=\"card-title\">Rules</Card.Title>\n                <Card.Body className=\"text-justify\">\n                  <ul>\n                    <li>\n                      Unlike Regular Tic Tac Toe 'X' doesnt always start first.\n                    </li>\n                    <li>\n                      Each player begins with 100 points. Players can use these\n                      points to place bids\n                    </li>\n                    <li>\n                      Turns are decided by the bids placed by the players. The\n                      Player with bigger bid wins round and can freely place\n                      his/her move\n                    </li>\n                    <li>\n                      If both players reach 0 points before winning then the\n                      game is considered a draw\n                    </li>\n                    <li>\n                      If both players bid the same points then its considered\n                      draw and they have to bid again\n                    </li>\n                  </ul>\n                </Card.Body>\n              </Card>\n            </div>\n            <div className=\" d-flex  justify-content-center p-2 \">\n              <Button className=\"button\" onClick={() => createRoom()}>\n                {\"Start\"}\n              </Button>\n            </div>\n          </Col>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./WaitingRoom.css\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { baseUrl } from \"../../config.json\";\nimport {\n  Card,\n  Button,\n  InputGroup,\n  FormControl,\n  Col,\n  Row,\n} from \"react-bootstrap\";\nimport logo from \"../../assets/images/avatar.png\";\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(baseUrl);\n\nfunction WaitingRoom() {\n  const textInput = useRef();\n  const [players, setPlayers] = useState([]);\n  const { pathname } = useLocation();\n  const roomId = pathname.split(\"/\").pop();\n  const [joinbtn, setJoinbtn] = useState(false);\n  const [startbtn, setStartbtn] = useState(true);\n\n  async function joinRoom() {\n    const username = textInput.current.value;\n    const payload = { roomId: roomId, playerId: username };\n    socket.emit(\"joinRoom\", payload);\n  }\n\n  async function startGame() {\n    const username = textInput.current.value;\n    const path = `/room/${roomId}/${username}`;\n    console.log(path);\n    window.location.href = path;\n  }\n\n  useEffect(() => {\n    textInput.current.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 13) {\n        joinRoom();\n      }\n    });\n    async function getData() {\n      const payload = { roomId: roomId };\n      const { data } = await axios.post(`${baseUrl}/getPlayers`, payload);\n      setPlayers((prev) => data);\n      if (data.length === 2) {\n        setStartbtn((current) => !current);\n        setJoinbtn((current) => !current);\n      }\n    }\n    socket.on(\"joined\", (data) => {\n      setPlayers(data);\n      if (data.length === 2) {\n        setStartbtn((current) => !current);\n        setJoinbtn((current) => !current);\n      }\n    });\n    getData();\n  }, []);\n\n  const Avatar = ({ username }) => (\n    <Card className=\"player-card\">\n      <Card.Img variant=\"top\" src={logo} />\n      <Card.Body>\n        <Card.Title>{username}</Card.Title>\n      </Card.Body>\n    </Card>\n  );\n  return (\n    <>\n      <div className=\"root\">\n        <Row className=\"fill-width\">\n          <Col\n            md={6}\n            className=\"d-flex flex-column justify-content-between fill-height\"\n          >\n            {players.length === 0 && (\n              <div className=\"font text-center\">\n                Waiting for players to join:{\" \"}\n              </div>\n            )}\n            {players.length > 0 && (\n              <div className=\"font text-center\">Players in the Game : </div>\n            )}\n            <Row className=\" d-flex  justify-content-center p-4 \">\n              {players.map((player, i) => (\n                <Col md={5} xs={6} className=\"p-2\">\n                  <Avatar key={i} username={player.playerId} />\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          <Col className=\"p-4 d-flex flex-column justify-content-center\" md={6}>\n            <div className=\"d-flex  justify-content-center p-4\">\n              <InputGroup className=\" input\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  ref={textInput}\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n              </InputGroup>\n            </div>\n            <Row>\n              {!joinbtn ? (\n                <Col className=\" d-flex  justify-content-center p-4 \">\n                  <Button\n                    className=\"button\"\n                    onClick={() => joinRoom()}\n                    disabled={joinbtn}\n                  >\n                    {\"Join\"}\n                  </Button>\n                </Col>\n              ) : (\n                <Col className=\" d-flex  justify-content-center p-4 \">\n                  <Button\n                    className=\"button\"\n                    onClick={() => startGame()}\n                    disabled={startbtn}\n                  >\n                    {\"Start\"}\n                  </Button>\n                </Col>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default WaitingRoom;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport GameRoom from \"../src/Pages/GameRoom/GameRoom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"../src/Pages/Home/Home\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport WaitingRoom from \"../src/Pages/WaitingRoom/WaitingRoom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/room\">\n          <GameRoom />\n        </Route>\n        <Route path=\"/waitingroom\">\n          <WaitingRoom />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.3f28b642.png\";"],"sourceRoot":""}