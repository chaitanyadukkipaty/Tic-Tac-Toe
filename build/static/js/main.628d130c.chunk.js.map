{"version":3,"sources":["components/Squares.js","components/Board.js","api/socket/index.js","api/https/index.js","components/Game.js","helper.js","components/Chat.jsx","Pages/GameRoom/GameRoom.js","Pages/Home/Home.jsx","serviceWorker.js","Pages/WaitingRoom/WaitingRoom.jsx","index.js","assets/images/avatar.png"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","onClick","value","borderRadius","width","height","display","gridTemplateColumns","gridTemplateRows","Board","squares","map","square","i","key","socket","openSocket","baseUrl","placeBid","a","payload","axios","post","data","placeMove","getPlayers","players","resetGame","getNewRoom","joinExistingRoom","Game","playerId","roomId","textInput","useRef","useState","Array","fill","board","setBoard","isMyTurn","setIsMyTrun","pts","setPts","winner","lines","length","b","c","calculateWinner","myChar","setChar","btn","setBtn","setPlayers","isDraw","setDraw","toggleBid","current","disableBid","enableBid","enableTurn","changePts","changeBoard","handleClick","boardCopy","status","reset","submitBid","bid","Number","toast","error","useEffect","addEventListener","e","keyCode","emit","joinRoom","on","bidWinner","move","prev","dark","gameState","Reset","setMyCharacter","isArray","reload","addPlayers","game","makeMove","console","log","className","InputGroup","Prepend","Text","id","FormControl","ref","type","placeholder","aria-label","aria-describedby","Button","disabled","Character","Chat","chat","messagesEndRef","msgs","setMsgs","sendChat","Msg","sendMsg","isMobile","senderId","system","message","recieveMsg","scrollIntoView","behavior","GameRoom","path","useLocation","pathname","split","pop","autoClose","transition","Zoom","limit","hideProgressBar","newestOnTop","Container","fluid","Row","minHeight","minWidth","Col","Home","room","window","location","href","Navbar","expand","variant","Brand","md","span","offset","Card","Title","Body","createRoom","join","Boolean","hostname","match","WaitingRoom","joinbtn","setJoinbtn","startbtn","setStartbtn","username","getData","Avatar","Img","src","logo","player","xs","startGame","ReactDOM","render","StrictMode","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"2TAEMA,G,MAAQ,CACZC,WAAY,YACZC,OAAQ,qBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,SAWIC,EARA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACzB,OACE,4BAAQT,MAAOA,EAAOQ,QAASA,GAC5BC,ICXDT,EAAQ,CACZE,OAAQ,qBACRQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,oBAAqB,iBACrBC,iBAAkB,kBAaLC,EAVD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAST,EAAc,EAAdA,QACxB,OACE,yBAAKR,MAAOA,GACTiB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,kBAAC,EAAD,CAAQC,IAAKD,EAAGX,MAAOU,EAAQX,QAAS,kBAAMA,EAAQY,W,wECdxDE,EAASC,IAAWC,K,qBCAnB,SAAeC,EAAtB,kC,4CAAO,iCAAAC,EAAA,6DAA0BC,EAA1B,EAA0BA,QAA1B,SACkBC,IAAMC,KAAN,UAAcL,IAAd,QAA6BG,GAD/C,uBACGG,EADH,EACGA,KADH,kBAEE,CAAEA,SAFJ,4C,sBAKA,SAAeC,EAAtB,kC,4CAAO,iCAAAL,EAAA,6DAA2BC,EAA3B,EAA2BA,QAA3B,SACkBC,IAAMC,KAAN,UAAcL,IAAd,iBAAsCG,GADxD,uBACGG,EADH,EACGA,KADH,kBAEE,CAAEA,SAFJ,4C,sBAKA,SAAeE,EAAtB,kC,4CAAO,mCAAAN,EAAA,6DAA4BC,EAA5B,EAA4BA,QAA5B,SACkBC,IAAMC,KAAN,UAAcL,IAAd,eAAoCG,GADtD,uBACGG,EADH,EACGA,KACAG,EAAYH,EAAZG,QAFH,kBAGE,CAAEA,YAHJ,4C,sBAMA,SAAeC,EAAtB,kC,4CAAO,iCAAAR,EAAA,6DAA2BC,EAA3B,EAA2BA,QAA3B,SACkBC,IAAMC,KAAN,UAAcL,IAAd,UAA+BG,GADjD,uBACGG,EADH,EACGA,KADH,kBAEE,CAAEA,SAFJ,4C,sBAKA,SAAeK,IAAtB,+B,4CAAO,8BAAAT,EAAA,sEACkBE,IAAMC,KAAN,UAAcL,IAAd,MADlB,uBACGM,EADH,EACGA,KADH,kBAEE,CAAEA,SAFJ,4C,sBAKA,SAAeM,IAAtB,+B,4CAAO,8BAAAV,EAAA,sEACkBE,IAAMC,KAAN,UAAcL,IAAd,cADlB,uBACGM,EADH,EACGA,KADH,kBAEE,CAAEA,SAFJ,4C,sBC8KQO,MA1Lf,YAAqC,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAClBC,EAAYC,mBADgB,EAGRC,mBAASC,MAAM,GAAGC,KAAK,OAHf,mBAG3BC,EAH2B,KAGpBC,EAHoB,OAIFJ,oBAAS,GAJP,mBAI3BK,EAJ2B,KAIjBC,EAJiB,OAKZN,mBAAS,KALG,mBAK3BO,EAL2B,KAKtBC,EALsB,KAM5BC,ECvBD,SAAyBlC,GAW9B,IAVA,IAAMmC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAhC,EAAI,EAAGA,EAAIgC,EAAMC,OAAQjC,IAAK,CAAC,IAAD,cACnBgC,EAAMhC,GADa,GAC9BM,EAD8B,KAC3B4B,EAD2B,KACxBC,EADwB,KAErC,GAAItC,EAAQS,IAAMT,EAAQS,KAAOT,EAAQqC,IAAMrC,EAAQS,KAAOT,EAAQsC,GACpE,OAAOtC,EAAQS,GAGnB,OAAO,KDMQ8B,CAAgBX,GANG,EAORH,mBAAS,IAPD,mBAO3Be,EAP2B,KAOnBC,EAPmB,OAQZhB,oBAAS,GARG,mBAQ3BiB,EAR2B,KAQtBC,EARsB,OASJlB,mBAAS,IATL,mBAS3BT,EAT2B,KASlB4B,EATkB,OAURnB,oBAAS,GAVD,mBAU3BoB,EAV2B,KAUnBC,EAVmB,KAa5BC,EAAY,WAChBJ,GAAO,SAACK,GAAD,OAAcA,MAGjBC,EAAa,WACjBN,GAAO,SAACK,GAAD,OAAa,MAGhBE,EAAY,WAChBP,GAAO,SAACK,GAAD,OAAa,MAOhBG,EAAa,WACjBpB,GAAY,SAACiB,GAAD,OAAa,MAGrBI,EAAY,SAACvC,GACjBoB,EAAOpB,IAGHwC,GAAc,SAACxC,GACnBgB,EAAShB,IAGLyC,GAAW,uCAAG,WAAOnD,GAAP,mBAAAM,EAAA,yDACZ8C,EADY,YACI3B,IAClBM,IAAUqB,EAAUpD,GAFN,qDAGd2B,EAHc,wBAIhByB,EAAUpD,GAAKqC,EACT9B,EAAU,CACdY,OAAQA,EACRD,SAAUA,EACV7B,MAAOW,EACPyB,MAAO2B,GATO,SAWOzC,EAAU,CAAEJ,YAXnB,kBAWRG,KACC2C,QA3BXzB,GAAY,SAACiB,GAAD,OAAa,KAeP,4CAAH,sDAkBXS,GAAK,uCAAG,4BAAAhD,EAAA,6DACNC,EAAU,CAAEY,OAAQA,GADd,SAENL,EAAU,CAAEP,YAFN,2CAAH,qDAILgD,GAAS,uCAAG,gCAAAjD,EAAA,yDACVkD,EAAMpC,EAAUyB,QAAQxD,MACxBkB,EAAU,CACdY,OAAQA,EACRD,SAAUA,EACV7B,MAAOoE,OAAOD,GACd/B,MAAOA,KAELI,GAAO4B,OAAOD,IARF,iCASSnD,EAAS,CAAEE,YATpB,kBASNG,KACC2C,QACPT,IAXY,wBAcdc,IAAMC,MAAM,iCAdE,4CAAH,qDAmEf,OAjDAC,qBAAU,WACRxC,EAAUyB,QAAQgB,iBAAiB,WAAW,SAACC,GAC3B,KAAdA,EAAEC,SACJR,QFhGD,YAAyC,IAArBpC,EAAoB,EAApBA,OAAQD,EAAY,EAAZA,SACjChB,EAAO8D,KAAK,WAAY,CAAE7C,SAAQD,aEkGhC+C,CAAS,CAAE9C,SAAQD,aFhFhB,YAUH,IATFE,EASC,EATDA,UACAF,EAQC,EARDA,SACA4B,EAOC,EAPDA,WACAF,EAMC,EANDA,UACAI,EAKC,EALDA,WAEAC,GAGC,EAJDF,UAIC,EAHDE,WACAN,EAEC,EAFDA,QAEC,EADDO,YAEAhD,EAAOgE,GAAG,aAAa,SAACxD,GAAU,IACxB8C,EAAyB9C,EAAzB8C,IAAKW,EAAoBzD,EAApByD,UAAWC,EAAS1D,EAAT0D,KACL,SAAfZ,EAAIH,QACNP,IACAH,GAAQ,SAAC0B,GAAD,OAAU,KAClBX,IAAMY,KAAK,gBACa,SAAfd,EAAIH,QAAmC,OAAdc,GAA+B,OAATC,EACxDV,IAAMY,KAAK,kBAEI,SAAfd,EAAIH,QACJc,IAAcjD,GACdkD,IAASlD,GAETE,EAAUyB,QAAQxD,MAAQ,GAC1B2D,IACAU,IAAMY,KAAK,oCAEI,SAAfd,EAAIH,QACJc,IAAcjD,GACdkD,IAASlD,IAETE,EAAUyB,QAAQxD,MAAQ,GAC1BqE,IAAMY,KAAK,qBAES,IAAlBd,EAAItC,IAAkC,SAAfsC,EAAIH,QAC7BT,IAGFK,EAAUvC,EAAKQ,OE0CfqD,CAAU,CACRnD,YACAF,WACA4B,aACAF,YACAG,YACAC,aACAC,YACAN,YF9CC,YAMH,IALFzB,EAKC,EALDA,SACAgC,EAIC,EAJDA,YACAD,EAGC,EAHDA,UACAF,EAEC,EAFDA,UACAJ,EACC,EADDA,QAEAzC,EAAOgE,GAAG,SAAS,SAACxD,GAClBwC,EAAY,YAAIxC,EAAKe,QACrBwB,EAAUvC,EAAKQ,IACf6B,IACAJ,GAAQ,SAAC0B,GAAD,OAAU,QEqClBG,CAAM,CACJtD,WACAgC,eACAD,YACAN,UACAI,cFtCC,YAA8C,IAApBV,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QACvCpC,EAAOgE,GAAG,QAAQ,SAACxD,GACF,KAAX2B,GAAeC,EAAQ5B,MEsC3B+D,CAAe,CAAEpC,SAAQC,YFlCtB,YAOH,IANFpB,EAMC,EANDA,SACA8B,EAKC,EALDA,WACAJ,EAIC,EAJDA,UACAM,EAGC,EAHDA,YACAD,EAEC,EAFDA,UACA7B,EACC,EADDA,UAEAlB,EAAOgE,GAAG,UAAU,SAACxD,GAAU,IACrB8C,EAAyB9C,EAAzB8C,IAAKW,EAAoBzD,EAApByD,UAAWC,EAAS1D,EAAT0D,KACL,SAAfZ,EAAIH,QAAqBc,IAAcjD,GAAYkD,IAASlD,IAC9D8B,IACAU,IAAMY,KAAK,oCAES,IAAlBd,EAAItC,KACN0B,IACAxB,EAAUyB,QAAQxD,MAAQmE,EAAItC,IAE5BK,MAAMmD,QAAQhE,EAAI,QAAcA,EAAI,MAAUuB,QAChDiB,EAAYxC,EAAI,OAClBuC,EAAUvC,EAAKQ,OEefyD,CAAO,CACLzD,WACA8B,aACAJ,YACAM,eACAD,YACA7B,cFvHJlB,EAAOgE,GAAG,cAAc,WACtBR,IAAMC,MAAM,kDEyHI,uCAAG,8BAAArD,EAAA,6DACXC,EAAU,CAAEY,OAAQA,GADT,SAEEP,EAAW,CAAEL,YAFf,OAEXG,EAFW,OAGjB+B,GAAW,SAAC4B,GAAD,mBAAc3D,EAAKG,YAHb,2CAAH,oDAKhB+D,KACC,IAEHhB,qBAAU,YF7HL,YAAqE,IAAjD7B,EAAgD,EAAhDA,OAAkBN,GAA8B,EAAxCP,SAAwC,EAA9BO,OAAeyB,GAAe,EAAvBb,OAAuB,EAAfa,aAC1DhD,EAAOgE,GAAG,QAAQ,SAACxD,GACjB,IAAM0C,EAAS,YAAO3B,GACdoD,EAASnE,EAATmE,KACJ9C,GAAUqB,EAAUyB,IACxB3B,EAAY,YAAIxC,EAAKe,WEyHrBqD,CAAS,CAAE/C,SAAQb,WAAUO,QAAOY,SAAQa,mBAC3C,CAACb,EAAQZ,IAEZmC,qBAAU,WACRmB,QAAQC,IAAItC,KACX,CAACA,IAEF,oCACGf,GACC,yBAAKsD,UAAU,2CACZ,mBAGL,kBAAC,EAAD,CAAOpF,QAAS4B,EAAOrC,QAAS+D,KAChC,yBAAK8B,UAAU,2CACZ,gBAAkBpD,GAErB,yBAAKoD,UAAU,sCACb,kBAACC,EAAA,EAAD,CAAYD,UAAU,cACpB,kBAACC,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,gBAApB,MAEF,kBAACC,EAAA,EAAD,CACEC,IAAKnE,EACLoE,KAAK,SACLC,YAAY,MACZC,aAAW,MACXC,mBAAiB,mBAIvB,yBAAKV,UAAU,sCACb,kBAACW,EAAA,EAAD,CACEX,UAAU,UACV7F,QAASmE,GACTsC,SAAUtD,GAAOZ,GAAYe,GAAUX,GAHzC,QASF,yBAAKkD,UAAU,QACZ1C,IAAQG,GAAU,mCAErB,yBAAKuC,UAAU,QACZlD,GACC,YACGA,IAAWlB,EAAQ,GAAGiF,UACnBjF,EAAQ,GAAGK,SACXL,EAAQ,GAAGK,WACjBwB,GAAUX,IACV,yBAAKkD,UAAU,sCACb,kBAACW,EAAA,EAAD,CAAQX,UAAU,UAAU7F,QAASkE,IAArC,a,wBErIGyC,MAtDf,YAAqC,IAArB7E,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAClB6E,EAAO3E,mBACP4E,EAAiB5E,iBAAO,MAFI,EAGVC,mBAAS,IAHC,mBAG3B4E,EAH2B,KAGrBC,EAHqB,KAS5BC,EAAW,WACf,IAAMC,EAAML,EAAKnD,QAAQxD,OJyGtB,YAA6C,IAA1B6B,EAAyB,EAAzBA,SAAUmF,EAAe,EAAfA,IAAKlF,EAAU,EAAVA,OACvCjB,EAAO8D,KAAK,UAAW,CAAE9C,WAAUmF,MAAKlF,WIzGtCmF,CAAQ,CAAEpF,WAAUmF,MAAKlF,WACzB6E,EAAKnD,QAAQxD,MAAQ,IAavB,OAVAuE,qBAAU,WACRoC,EAAKnD,QAAQgB,iBAAiB,WAAW,SAACC,GACtB,KAAdA,EAAEC,SACJqC,OJwFD,YAAsD,IAAhClF,EAA+B,EAA/BA,SAAUiF,EAAqB,EAArBA,QAASI,EAAY,EAAZA,SAC9CrG,EAAOgE,GAAG,cAAc,YAAgC,IAA7BsC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,OAAQJ,EAAU,EAAVA,IACrCK,EACJF,IAAatF,EAAb,eAAgCmF,GAAhC,UAA2CG,EAA3C,aAAwDH,GAC1DF,GAAQ,SAAC9B,GAAD,4BAAcA,GAAd,CAAoB,CAAEoC,SAAQJ,IAAKK,QACvCH,GAAYE,GAAUD,IAAatF,GAAUwC,IAAMY,KAAK+B,MI1F5DM,CAAW,CAAEzF,WAAUiF,UAASI,wBAC/B,IAEH3C,qBAnBuB,WACrBqC,EAAepD,QAAQ+D,eAAe,CAAEC,SAAU,aAkB1B,CAACX,IAEzB,yBAAKjB,UAAU,aACb,wBAAIA,UAAU,SACZ,wBAAIA,UAAU,aACZ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,yBAAyBrG,MAAO,CAAEY,OAAQ,SACtD0G,EAAKpG,KAAI,WAAkBE,GAAlB,IAAGyG,EAAH,EAAGA,OAAQJ,EAAX,EAAWA,IAAX,OACRI,EACE,wBAAIxB,UAAU,aAAahF,IAAKD,GAC7BqG,GAGH,wBAAIpG,IAAKD,GAAIqG,MAGjB,yBAAKd,IAAKU,KAEZ,2BACEV,IAAKS,EACLf,UAAU,eACVQ,YAAY,sB,2BCZXqB,MA/Bf,WAAqB,IAEbC,EADeC,cAAbC,SACcC,MAAM,KACtBhG,EAAW6F,EAAKI,MAChBhG,EAAS4F,EAAKI,MAEpB,OACE,oCACE,yBAAKlC,UAAU,QACb,kBAAC,IAAD,CACEmC,UAAW,IACXC,WAAYC,IACZC,MAAO,EACPC,iBAAe,EACfC,aAAW,IAEb,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,CAAKhJ,MAAO,CAAEiJ,UAAW,QAASC,SAAU,UAC1C,kBAACC,EAAA,EAAD,CAAK9C,UAAU,iEACb,kBAAC,EAAD,CAAM/D,SAAUA,EAAUC,OAAQA,KAEpC,kBAAC4G,EAAA,EAAD,CAAK9C,UAAU,qCACb,kBAAC,EAAD,CAAM/D,SAAUA,EAAUC,OAAQA,U,kCC0DjC6G,MAlFf,WAAgB,4CACd,gCAAA1H,EAAA,sEACyBS,IADzB,gBACUL,EADV,EACUA,KACFqG,EAFR,uBAE+BrG,EAAKuH,MAClClD,QAAQC,IAAI+B,GACZmB,OAAOC,SAASC,KAAOrB,EAJzB,4CADc,kEAOd,gCAAAzG,EAAA,sEACyBU,IADzB,mBAEsB,KADZN,EADV,EACUA,MACCuB,SAAgBV,MAAMmD,QAAQhE,GAFzC,uBAGIgD,IAAMC,MAAM,+CAHhB,0BAMQoD,EANR,uBAM+BrG,EAAK,GAAGS,QACrC4D,QAAQC,IAAI+B,GACZmB,OAAOC,SAASC,KAAOrB,EARzB,6CAPc,sBAiBd,OACE,oCACE,kBAAC,IAAD,CACEK,UAAW,IACXC,WAAYC,IACZC,MAAO,EACPE,aAAW,IAEb,yBAAKxC,UAAU,kBACb,kBAACyC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACU,EAAA,EAAD,CAAQpD,UAAU,YAAYqD,OAAO,KAAKC,QAAQ,QAChD,kBAACF,EAAA,EAAOG,MAAR,qBAEF,kBAACT,EAAA,EAAD,CACEU,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GACvB1D,UAAU,mDAEV,yBAAKA,UAAU,OACb,kBAAC2D,EAAA,EAAD,CAAM3D,UAAU,QACd,kBAAC2D,EAAA,EAAKC,MAAN,CAAY5D,UAAU,cAAtB,SACA,kBAAC2D,EAAA,EAAKE,KAAN,CAAW7D,UAAU,gBACnB,4BACE,yFAGA,8GAIA,4JAKA,gHAIA,2HAQR,kBAAC2C,EAAA,EAAD,CAAK3C,UAAU,mCACb,yBAAKA,UAAU,SACb,kBAACW,EAAA,EAAD,CAAQX,UAAU,SAAS7F,QAAS,kBAjEnC,WAAD,+BAiE0C2J,KACvC,oBAGL,yBAAK9D,UAAU,SACb,kBAACW,EAAA,EAAD,CAAQX,UAAU,SAAS7F,QAAS,kBAtEpC,0CAsE0C4J,KACvC,6BCjECC,QACW,cAA7Bf,OAAOC,SAASe,UAEe,UAA7BhB,OAAOC,SAASe,UAEhBhB,OAAOC,SAASe,SAASC,MACvB,2D,4BCFAjJ,EAASC,IAAWC,KAkIXgJ,MAhIf,WACE,IAAMhI,EAAYC,mBADG,EAESC,mBAAS,IAFlB,mBAEdT,EAFc,KAEL4B,EAFK,KAIftB,EADe6F,cAAbC,SACgBC,MAAM,KAAKC,MAJd,EAKS7F,oBAAS,GALlB,mBAKd+H,EALc,KAKLC,EALK,OAMWhI,oBAAS,GANpB,mBAMdiI,EANc,KAMJC,EANI,cAQNvF,IARM,2EAQrB,8BAAA3D,EAAA,sDACQmJ,EAAWrI,EAAUyB,QAAQxD,MAC7BkB,EAAU,CAAEY,OAAQA,EAAQD,SAAUuI,GAC5CvJ,EAAO8D,KAAK,WAAYzD,GAH1B,4CARqB,kEAcrB,8BAAAD,EAAA,sDACQmJ,EAAWrI,EAAUyB,QAAQxD,MAC7B0H,EAFR,gBAEwB5F,EAFxB,YAEkCsI,GAChC1E,QAAQC,IAAI+B,GACZmB,OAAOC,SAASC,KAAOrB,EAJzB,4CAdqB,sBAqBrBnD,qBAAU,WAAM,4CAMd,8BAAAtD,EAAA,6DACQC,EAAU,CAAEY,OAAQA,GAD5B,SAEqBP,EAAW,CAAEL,YAFlC,OAEQG,EAFR,OAGE+B,GAAW,SAAC4B,GAAD,mBAAc3D,EAAKG,YACV,IAAhBH,EAAKuB,SACPuH,GAAY,SAAC3G,GAAD,OAAcA,KAC1ByG,GAAW,SAACzG,GAAD,OAAcA,MAN7B,4CANc,sBACdzB,EAAUyB,QAAQgB,iBAAiB,WAAW,SAACC,GAC3B,KAAdA,EAAEC,SACJE,OAYJ/D,EAAOgE,GAAG,UAAU,SAACxD,GACnB+B,EAAW/B,GACS,IAAhBA,EAAKuB,SACPuH,GAAY,SAAC3G,GAAD,OAAcA,KAC1ByG,GAAW,SAACzG,GAAD,OAAcA,SAnBf,mCAsBd6G,KACC,IAEH,IAAMC,EAAS,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OACb,kBAACb,EAAA,EAAD,CAAM3D,UAAU,eACd,kBAAC2D,EAAA,EAAKgB,IAAN,CAAUrB,QAAQ,MAAMsB,IAAKC,MAC7B,kBAAClB,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKC,MAAN,KAAaY,MAInB,OACE,oCACE,yBAAKxE,UAAU,QACb,kBAACoD,EAAA,EAAD,CAAQpD,UAAU,YAAYqD,OAAO,KAAKC,QAAQ,QAChD,kBAACF,EAAA,EAAOG,MAAR,qBAEF,kBAACZ,EAAA,EAAD,CAAK3C,UAAU,cACb,kBAAC8C,EAAA,EAAD,CACEU,GAAI,EACJxD,UAAU,0DAEU,IAAnBpE,EAAQoB,QACP,yBAAKgD,UAAU,oBAAf,+BAC+B,KAGhCpE,EAAQoB,OAAS,GAChB,yBAAKgD,UAAU,oBAAf,0BAEF,kBAAC2C,EAAA,EAAD,CAAK3C,UAAU,wCACZpE,EAAQf,KAAI,SAACiK,EAAQ/J,GAAT,OACX,kBAAC+H,EAAA,EAAD,CAAKU,GAAI,EAAGuB,GAAI,EAAG/E,UAAU,OAC3B,kBAAC0E,EAAD,CAAQ1J,IAAKD,EAAGyJ,SAAUM,EAAO7I,iBAKzC,kBAAC6G,EAAA,EAAD,CAAK9C,UAAU,gDAAgDwD,GAAI,GACjE,yBAAKxD,UAAU,sCACb,kBAACC,EAAA,EAAD,CAAYD,UAAU,SACpB,kBAACC,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,gBAApB,MAEF,kBAACC,EAAA,EAAD,CACEC,IAAKnE,EACLqE,YAAY,WACZC,aAAW,WACXC,mBAAiB,mBAIvB,kBAACiC,EAAA,EAAD,KACIyB,EAWA,kBAACtB,EAAA,EAAD,CAAK9C,UAAU,wCACb,kBAACW,EAAA,EAAD,CACEX,UAAU,SACV7F,QAAS,kBA9GN,0CA8GY6K,IACfpE,SAAU0D,GAET,UAhBL,kBAACxB,EAAA,EAAD,CAAK9C,UAAU,wCACb,kBAACW,EAAA,EAAD,CACEX,UAAU,SACV7F,QAAS,kBAAM6E,KACf4B,SAAUwD,GAET,YAiBb,yBAAKpE,UAAU,eACZ,+CCjIXiF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACtD,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gBACV,kBAAC,EAAD,UAKRuD,SAASC,eAAe,SFyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAnH,GACLoB,QAAQpB,MAAMA,EAAM+C,a,oGGzI5BqE,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.628d130c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst style = {\n  background: \"lightblue\",\n  border: \"2px solid darkblue\",\n  fontSize: \"30px\",\n  fontWeight: \"800\",\n  cursor: \"pointer\",\n  outline: \"none\",\n};\n\nconst Square = ({ onClick, value }) => {\n  return (\n    <button style={style} onClick={onClick}>\n      {value}\n    </button>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"./Squares\";\n\nconst style = {\n  border: \"4px solid darkblue\",\n  borderRadius: \"10px\",\n  width: \"250px\",\n  height: \"250px\",\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\",\n  gridTemplateRows: \"repeat(3, 1fr)\",\n};\n\nconst Board = ({ squares, onClick }) => {\n  return (\n    <div style={style}>\n      {squares.map((square, i) => (\n        <Square key={i} value={square} onClick={() => onClick(i)} />\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","import openSocket from \"socket.io-client\";\nimport { baseUrl } from \"../../config.json\";\nimport { toast } from \"react-toastify\";\nconst socket = openSocket(baseUrl);\n\nexport function joinRoom({ roomId, playerId }) {\n  socket.emit(\"joinRoom\", { roomId, playerId });\n}\n\nexport function disconnected() {\n  socket.on(\"disconnect\", () => {\n    toast.error(\"You have been disconnected, Reload the page\");\n  });\n}\n\nexport function makeMove({ winner, playerId, board, myChar, changeBoard }) {\n  socket.on(\"Move\", (data) => {\n    const boardCopy = [...board];\n    const { game } = data;\n    if (winner || boardCopy[game]) return;\n    changeBoard([...data.board]);\n  });\n}\n\nexport function gameState({\n  textInput,\n  playerId,\n  disableBid,\n  toggleBid,\n  enableTurn,\n  enableBid,\n  changePts,\n  setDraw,\n  changeBoard,\n}) {\n  socket.on(\"gameState\", (data) => {\n    const { bid, bidWinner, move } = data;\n    if (bid.status === \"DRAW\") {\n      disableBid();\n      setDraw((prev) => true);\n      toast.dark(\"It's a Draw\");\n    } else if (bid.status === \"DONE\" && bidWinner === null && move === null) {\n      toast.dark(\"Bids are equal\");\n    } else if (\n      bid.status === \"DONE\" &&\n      bidWinner === playerId &&\n      move === playerId\n    ) {\n      textInput.current.value = \"\";\n      enableTurn();\n      toast.dark(\"You won the bid, make your move\");\n    } else if (\n      bid.status === \"DONE\" &&\n      bidWinner !== playerId &&\n      move !== playerId\n    ) {\n      textInput.current.value = \"\";\n      toast.dark(\"You Lost the Bid\");\n    }\n    if (bid[playerId] === 0 && bid.status === \"DONE\") {\n      toggleBid();\n    }\n\n    changePts(data[playerId]);\n  });\n}\n\nexport function Reset({\n  playerId,\n  changeBoard,\n  changePts,\n  enableBid,\n  setDraw,\n}) {\n  socket.on(\"reset\", (data) => {\n    changeBoard([...data.board]);\n    changePts(data[playerId]);\n    enableBid();\n    setDraw((prev) => false);\n  });\n}\n\nexport function setMyCharacter({ myChar, setChar }) {\n  socket.on(\"Char\", (data) => {\n    if (myChar === \"\") setChar(data);\n  });\n}\n\nexport function reload({\n  playerId,\n  enableTurn,\n  toggleBid,\n  changeBoard,\n  changePts,\n  textInput,\n}) {\n  socket.on(\"Reload\", (data) => {\n    const { bid, bidWinner, move } = data;\n    if (bid.status === \"DONE\" && bidWinner === playerId && move === playerId) {\n      enableTurn();\n      toast.dark(\"You won the bid, make your move\");\n    }\n    if (bid[playerId] !== 0) {\n      toggleBid();\n      textInput.current.value = bid[playerId];\n    }\n    if (Array.isArray(data[\"board\"]) && data[\"board\"].length)\n      changeBoard(data[\"board\"]);\n    changePts(data[playerId]);\n  });\n}\n\nexport function recieveMsg({ playerId, setMsgs, isMobile }) {\n  socket.on(\"recieveMsg\", ({ senderId, system, Msg }) => {\n    const message =\n      senderId === playerId ? `You: ${Msg}` : `${senderId}: ${Msg}`;\n    setMsgs((prev) => [...prev, { system, Msg: message }]);\n    if (isMobile && system && senderId !== playerId) toast.dark(Msg);\n  });\n}\n\nexport function sendMsg({ playerId, Msg, roomId }) {\n  socket.emit(\"sendMsg\", { playerId, Msg, roomId });\n}\n","import axios from \"axios\";\nimport { baseUrl } from \"../../config.json\";\n\nexport async function placeBid({ payload }) {\n  const { data } = await axios.post(`${baseUrl}/bid`, payload);\n  return { data };\n}\n\nexport async function placeMove({ payload }) {\n  const { data } = await axios.post(`${baseUrl}/symbolPlaced`, payload);\n  return { data };\n}\n\nexport async function getPlayers({ payload }) {\n  const { data } = await axios.post(`${baseUrl}/getPlayers`, payload);\n  const { players } = data;\n  return { players };\n}\n\nexport async function resetGame({ payload }) {\n  const { data } = await axios.post(`${baseUrl}/reset`, payload);\n  return { data };\n}\n\nexport async function getNewRoom() {\n  const { data } = await axios.post(`${baseUrl}/`);\n  return { data };\n}\n\nexport async function joinExistingRoom() {\n  const { data } = await axios.post(`${baseUrl}/joinRoom`);\n  return { data };\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Game.css\";\nimport Board from \"../components/Board\";\nimport { calculateWinner } from \"../helper\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport {\n  joinRoom,\n  makeMove,\n  gameState,\n  setMyCharacter,\n  reload,\n  disconnected,\n  Reset,\n} from \"../api/socket/index\";\nimport { placeBid, placeMove, getPlayers, resetGame } from \"../api/https/index\";\nfunction Game({ playerId, roomId }) {\n  const textInput = useRef();\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isMyTurn, setIsMyTrun] = useState(false);\n  const [pts, setPts] = useState(100);\n  const winner = calculateWinner(board);\n  const [myChar, setChar] = useState(\"\");\n  const [btn, setBtn] = useState(false);\n  const [players, setPlayers] = useState([]);\n  const [isDraw, setDraw] = useState(false);\n\n  //helper functions\n  const toggleBid = () => {\n    setBtn((current) => !current);\n  };\n\n  const disableBid = () => {\n    setBtn((current) => true);\n  };\n\n  const enableBid = () => {\n    setBtn((current) => false);\n  };\n\n  const disableTurn = () => {\n    setIsMyTrun((current) => false);\n  };\n\n  const enableTurn = () => {\n    setIsMyTrun((current) => true);\n  };\n\n  const changePts = (data) => {\n    setPts(data);\n  };\n\n  const changeBoard = (data) => {\n    setBoard(data);\n  };\n\n  const handleClick = async (i) => {\n    const boardCopy = [...board];\n    if (winner || boardCopy[i]) return;\n    if (isMyTurn) {\n      boardCopy[i] = myChar;\n      const payload = {\n        roomId: roomId,\n        playerId: playerId,\n        value: i,\n        board: boardCopy,\n      };\n      const { data } = await placeMove({ payload });\n      if (data.status) {\n        disableTurn();\n      }\n    }\n  };\n\n  const reset = async () => {\n    const payload = { roomId: roomId };\n    await resetGame({ payload });\n  };\n  const submitBid = async () => {\n    const bid = textInput.current.value;\n    const payload = {\n      roomId: roomId,\n      playerId: playerId,\n      value: Number(bid),\n      board: board,\n    };\n    if (pts >= Number(bid)) {\n      const { data } = await placeBid({ payload });\n      if (data.status) {\n        toggleBid();\n      }\n    } else {\n      toast.error(\"You don't have enought Points\");\n    }\n  };\n\n  useEffect(() => {\n    textInput.current.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 13) {\n        submitBid();\n      }\n    });\n    joinRoom({ roomId, playerId });\n    gameState({\n      textInput,\n      playerId,\n      disableBid,\n      toggleBid,\n      enableBid,\n      enableTurn,\n      changePts,\n      setDraw,\n    });\n    Reset({\n      playerId,\n      changeBoard,\n      changePts,\n      setDraw,\n      enableBid,\n    });\n    setMyCharacter({ myChar, setChar });\n    reload({\n      playerId,\n      enableTurn,\n      toggleBid,\n      changeBoard,\n      changePts,\n      textInput,\n    });\n    disconnected();\n    const addPlayers = async () => {\n      const payload = { roomId: roomId };\n      const data = await getPlayers({ payload });\n      setPlayers((prev) => [...data.players]);\n    };\n    addPlayers();\n  }, []);\n\n  useEffect(() => {\n    makeMove({ winner, playerId, board, myChar, changeBoard });\n  }, [myChar, board]);\n\n  useEffect(() => {\n    console.log(isDraw);\n  }, [isDraw]);\n  return (\n    <>\n      {isMyTurn && (\n        <div className=\"font d-flex  justify-content-center p-4\">\n          {\"Place your Move\"}\n        </div>\n      )}\n      <Board squares={board} onClick={handleClick} />\n      <div className=\"font d-flex  justify-content-center p-4\">\n        {\"Points left: \" + pts}\n      </div>\n      <div className=\"d-flex  justify-content-center p-4\">\n        <InputGroup className=\"mb-3 input\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">$</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            ref={textInput}\n            type=\"number\"\n            placeholder=\"Bid\"\n            aria-label=\"Bid\"\n            aria-describedby=\"basic-addon1\"\n          />\n        </InputGroup>\n      </div>\n      <div className=\"d-flex  justify-content-center p-4\">\n        <Button\n          className=\"button \"\n          onClick={submitBid}\n          disabled={btn || isMyTurn || isDraw || winner}\n        >\n          Bid\n        </Button>\n      </div>\n\n      <div className=\"font\">\n        {btn && !isDraw && \"Waiting for Other Player to Bid\"}\n      </div>\n      <div className=\"font\">\n        {winner &&\n          \"Winner: \" +\n            (winner === players[0].Character\n              ? players[0].playerId\n              : players[1].playerId)}\n        {(isDraw || winner) && (\n          <div className=\"d-flex  justify-content-center p-4\">\n            <Button className=\"button \" onClick={reset}>\n              Reset\n            </Button>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Game;\n","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.css\";\nimport { recieveMsg, sendMsg } from \"../api/socket/index\";\nimport { ScrollView } from \"@cantonjs/react-scroll-view\";\nimport { isMobile } from \"react-device-detect\";\n\nfunction Chat({ playerId, roomId }) {\n  const chat = useRef();\n  const messagesEndRef = useRef(null);\n  const [msgs, setMsgs] = useState([]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const sendChat = () => {\n    const Msg = chat.current.value;\n    sendMsg({ playerId, Msg, roomId });\n    chat.current.value = \"\";\n  };\n\n  useEffect(() => {\n    chat.current.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 13) {\n        sendChat();\n      }\n    });\n    recieveMsg({ playerId, setMsgs, isMobile });\n  }, []);\n\n  useEffect(scrollToBottom, [msgs]);\n  return (\n    <div className=\"chat-room\">\n      <ol className=\"pages\">\n        <li className=\"chat page\">\n          <div className=\"chatArea\">\n            <div className=\"messages overflow-auto\" style={{ height: \"90vh\" }}>\n              {msgs.map(({ system, Msg }, i) =>\n                system ? (\n                  <li className=\"system-msg\" key={i}>\n                    {Msg}\n                  </li>\n                ) : (\n                  <li key={i}>{Msg}</li>\n                )\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n            <input\n              ref={chat}\n              className=\"inputMessage\"\n              placeholder=\"Type here...\"\n            />\n          </div>\n        </li>\n      </ol>\n    </div>\n  );\n}\n\nexport default Chat;\n","import React from \"react\";\nimport \"./GameRoom.css\";\nimport Game from \"../../components/Game\";\nimport Chat from \"../../components/Chat\";\nimport { ToastContainer, Zoom } from \"react-toastify\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction GameRoom() {\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const playerId = path.pop();\n  const roomId = path.pop();\n\n  return (\n    <>\n      <div className=\"root\">\n        <ToastContainer\n          autoClose={3000}\n          transition={Zoom}\n          limit={3}\n          hideProgressBar\n          newestOnTop\n        />\n        <Container fluid>\n          <Row style={{ minHeight: \"100vh\", minWidth: \"100vw\" }}>\n            <Col className=\"d-flex flex-column justify-content-center align-items-center \">\n              <Game playerId={playerId} roomId={roomId} />\n            </Col>\n            <Col className=\"fill-width chat-room chat-visible\">\n              <Chat playerId={playerId} roomId={roomId} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default GameRoom;\n","import React from \"react\";\nimport \"./Home.css\";\nimport { toast, ToastContainer, Zoom } from \"react-toastify\";\nimport { getNewRoom, joinExistingRoom } from \"../../api/https/index\";\nimport { Card, Navbar, Button, Container, Col, Row } from \"react-bootstrap\";\n\nfunction Home() {\n  async function createRoom() {\n    const { data } = await getNewRoom();\n    const path = `/waitingroom/${data.room}`;\n    console.log(path);\n    window.location.href = path;\n  }\n  async function join() {\n    const { data } = await joinExistingRoom();\n    if (data.length === 0 && Array.isArray(data)) {\n      toast.error(\"No Rooms Available, create new Room to play\");\n      return;\n    }\n    const path = `/waitingroom/${data[0].roomId}`;\n    console.log(path);\n    window.location.href = path;\n  }\n  return (\n    <>\n      <ToastContainer\n        autoClose={5000}\n        transition={Zoom}\n        limit={3}\n        newestOnTop\n      />\n      <div className=\"home-container\">\n        <Container fluid>\n          <Navbar className=\"nav-color\" expand=\"lg\" variant=\"dark\">\n            <Navbar.Brand>Big-Bad-Joe</Navbar.Brand>\n          </Navbar>\n          <Col\n            md={{ span: 6, offset: 3 }}\n            className=\"d-flex flex-column justify-content-around fill \"\n          >\n            <div className=\"p-2\">\n              <Card className=\"card\">\n                <Card.Title className=\"card-title\">Rules</Card.Title>\n                <Card.Body className=\"text-justify\">\n                  <ul>\n                    <li>\n                      Unlike Regular Tic Tac Toe 'X' doesnt always start first.\n                    </li>\n                    <li>\n                      Each player begins with 100 points. Players can use these\n                      points to place bids\n                    </li>\n                    <li>\n                      Turns are decided by the bids placed by the players. The\n                      Player with bigger bid wins round and can freely place\n                      his/her move\n                    </li>\n                    <li>\n                      If both players reach 0 points before winning then the\n                      game is considered a draw\n                    </li>\n                    <li>\n                      If both players bid the same points then its considered\n                      draw and they have to bid again\n                    </li>\n                  </ul>\n                </Card.Body>\n              </Card>\n            </div>\n            <Row className=\" d-flex  justify-content-center\">\n              <div className=\" p-2 \">\n                <Button className=\"button\" onClick={() => createRoom()}>\n                  {\"Create New Room\"}\n                </Button>\n              </div>\n              <div className=\" p-2 \">\n                <Button className=\"button\" onClick={() => join()}>\n                  {\"Join Existing Room\"}\n                </Button>\n              </div>\n            </Row>\n          </Col>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./WaitingRoom.css\";\nimport { useLocation } from \"react-router-dom\";\nimport { baseUrl } from \"../../config.json\";\nimport { getPlayers } from \"../../api/https/index\";\nimport {\n  Card,\n  Button,\n  InputGroup,\n  FormControl,\n  Col,\n  Row,\n  Navbar,\n} from \"react-bootstrap\";\nimport logo from \"../../assets/images/avatar.png\";\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(baseUrl);\n\nfunction WaitingRoom() {\n  const textInput = useRef();\n  const [players, setPlayers] = useState([]);\n  const { pathname } = useLocation();\n  const roomId = pathname.split(\"/\").pop();\n  const [joinbtn, setJoinbtn] = useState(false);\n  const [startbtn, setStartbtn] = useState(true);\n\n  async function joinRoom() {\n    const username = textInput.current.value;\n    const payload = { roomId: roomId, playerId: username };\n    socket.emit(\"joinRoom\", payload);\n  }\n\n  async function startGame() {\n    const username = textInput.current.value;\n    const path = `/room/${roomId}/${username}`;\n    console.log(path);\n    window.location.href = path;\n  }\n\n  useEffect(() => {\n    textInput.current.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 13) {\n        joinRoom();\n      }\n    });\n    async function getData() {\n      const payload = { roomId: roomId };\n      const data = await getPlayers({ payload });\n      setPlayers((prev) => [...data.players]);\n      if (data.length === 2) {\n        setStartbtn((current) => !current);\n        setJoinbtn((current) => !current);\n      }\n    }\n    socket.on(\"joined\", (data) => {\n      setPlayers(data);\n      if (data.length === 2) {\n        setStartbtn((current) => !current);\n        setJoinbtn((current) => !current);\n      }\n    });\n    getData();\n  }, []);\n\n  const Avatar = ({ username }) => (\n    <Card className=\"player-card\">\n      <Card.Img variant=\"top\" src={logo} />\n      <Card.Body>\n        <Card.Title>{username}</Card.Title>\n      </Card.Body>\n    </Card>\n  );\n  return (\n    <>\n      <div className=\"root\">\n        <Navbar className=\"nav-color\" expand=\"lg\" variant=\"dark\">\n          <Navbar.Brand>Big-Bad-Joe</Navbar.Brand>\n        </Navbar>\n        <Row className=\"fill-width\">\n          <Col\n            md={6}\n            className=\"d-flex flex-column justify-content-between fill-height\"\n          >\n            {players.length === 0 && (\n              <div className=\"font text-center\">\n                Waiting for players to join:{\" \"}\n              </div>\n            )}\n            {players.length > 0 && (\n              <div className=\"font text-center\">Players in the Game : </div>\n            )}\n            <Row className=\" d-flex  justify-content-center p-4 \">\n              {players.map((player, i) => (\n                <Col md={5} xs={6} className=\"p-2\">\n                  <Avatar key={i} username={player.playerId} />\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          <Col className=\"p-4 d-flex flex-column justify-content-center\" md={6}>\n            <div className=\"d-flex  justify-content-center p-4\">\n              <InputGroup className=\"input\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  ref={textInput}\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n              </InputGroup>\n            </div>\n            <Row>\n              {!joinbtn ? (\n                <Col className=\" d-flex  justify-content-center p-4 \">\n                  <Button\n                    className=\"button\"\n                    onClick={() => joinRoom()}\n                    disabled={joinbtn}\n                  >\n                    {\"Join\"}\n                  </Button>\n                </Col>\n              ) : (\n                <Col className=\" d-flex  justify-content-center p-4 \">\n                  <Button\n                    className=\"button\"\n                    onClick={() => startGame()}\n                    disabled={startbtn}\n                  >\n                    {\"Start\"}\n                  </Button>\n                </Col>\n              )}\n            </Row>\n          </Col>\n        </Row>\n        <div className=\"footer p-2 \">\n          {\"Share URL with your friends to play with\"}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default WaitingRoom;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport GameRoom from \"../src/Pages/GameRoom/GameRoom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"../src/Pages/Home/Home\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport WaitingRoom from \"../src/Pages/WaitingRoom/WaitingRoom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/room\">\n          <GameRoom />\n        </Route>\n        <Route path=\"/waitingroom\">\n          <WaitingRoom />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.3f28b642.png\";"],"sourceRoot":""}